context.properties = {
        support.dbus = false
        core.daemon = true
        core.name   = pipewire-0
        module.access = true
}

context.spa-libs = {
    audio.convert.* = audioconvert/libspa-audioconvert
    api.alsa.*      = alsa/libspa-alsa
    support.*       = support/libspa-support
}

context.modules = [
    { name = libpipewire-module-protocol-native
        args = {}
    }
    { name = libpipewire-module-spa-device-factory }
    { name = libpipewire-module-spa-node-factory }
    { name = libpipewire-module-adapter }
    { name = libpipewire-module-metadata }
    { name = libpipewire-module-access
        args = {
        }
        condition = [ { module.access = true } ]
    }
    { name = libpipewire-module-link-factory }
    { name = libpipewire-module-client-node }
]

context.objects = [
    # Make a default metadata store
    { factory = metadata
        args = {
            metadata.name = default
    #       metadata.values = [
    #            { key = default.audio.sink   value = { name = somesink } }
    #            { key = default.audio.source value = { name = somesource } }
    #        ]
        }
    }
    # A default dummy driver. This handles nodes marked with the "node.always-process"
    # property when no other driver is currently active. JACK clients need this.
    { factory = spa-node-factory
        args = {
            factory.name    = support.node.driver
            node.name       = Dummy-Driver
            node.group      = pipewire.dummy
            priority.driver = 20000
        }
    }
    { factory = spa-node-factory
        args = {
            factory.name    = support.node.driver
            node.name       = Freewheel-Driver
            priority.driver = 19000
            node.group      = pipewire.freewheel
            node.freewheel  = true
        }
    }

    # This creates a single PCM source device for the given
    # alsa device path hw:0. You can change source to sink
    # to make a sink in the same way.
    { factory = adapter
        args = {
            factory.name           = api.alsa.pcm.source
            node.name              = "system"
            node.description       = "system"
            media.class            = "Audio/Source"
            api.alsa.path          = "OUTPUT"
            node.suspend-on-idle   = true
            resample.disable       = true
            channelmix.disable     = true
            adapter.auto-port-config = {
                mode = dsp
                monitor = false
                control = false
                position = unknown   # aux, preserve
            }
        }
    }
    { factory = adapter
        args = {
            factory.name           = api.alsa.pcm.sink
            node.name              = "system"
            node.description       = "system"
            media.class            = "Audio/Sink"
            api.alsa.path          = "OUTPUT"
            node.suspend-on-idle     = true
            resample.disable      = true
            channelmix.disable     = true
            adapter.auto-port-config = {
                mode = dsp
                monitor = false
                control = false
                position = unknown   # aux, preserve
            }
        }
    }
]

context.exec = [
    { path = pipewire-pulse}
]